// Use C++ highlighter.
// Will this make KWrite use a sensible highlighter?
// Yep, it does.
// KWrite is freakin' smart!

mywidth	= 0.5
scale	= 0.2

include "g"
include "components.box"
include "connect.box"

pc_unit	= Window[][
	Style[.Border[mywidth*scale, color.black]]
	Color[color.black]
	w	= mywidth*scale
	
	pc_prev	= .Put[dff, (-30, -10)]
	pc_mux	= .Put[mux2to1, (10, pc_prev.Get["q"].y)]
	pc_inc	= .Put[unary, (Centre[pc_prev.Get["q"], pc_mux.Get["b"]].x, pc_mux.Get["b"].y)]
	
	// I/O Connections:
	addr	= .Put[sig_in, (-40, 5)]
	branch	= .Put[sig_in, (-40, 15)]
	pc	= .Put[sig_out, pc_mux.Get["out"] + (10, 0)]
	
	p1	= addr.Get["out"] + (20, 0)
	
	// Connections:
	c0	= .ConHVH[w, PointList[pc_prev.Get["q"], pc_inc.Get["in"]]]
	c1	= .Line[w, pc_inc.Get["out"], pc_mux.Get["b"]]
	c7	= .Line[w, addr.Get["out"], p1]
	c2	= .ConHVH[w, PointList[p1, pc_mux.Get["a"]]]
	c3	= .ConHV[w, PointList[branch.Get["out"], pc_mux.Get["s"]]]
	c4	= .Line[w, pc_mux.Get["out"], pc.Get["in"]]
	
	// Junctions:
	j0	= .Put[junc, c4.Get[1.5]]
	
	// More connections:
	p0	= (pc_prev.Get["d"].x - 3.0, pc_prev.Get["r"].y - 9.0)
	c5	= .ConVH[w, PointList[j0, p0]]
	c6	= .ConVH[w, PointList[p0, pc_prev.Get["d"]]]
	
	// Labels:
	Style[.Border[fwidth, color.black]]
	\ .Text[.Font["Helvetica", 14*scale], color.black,
		"PC_{prev}", pc_prev.Get["bot"];
		"+1", pc_inc.Get["fn"];
		"Mux_{PC}", pc_mux.Get["label"], .From[(0.8, 0.5)];
		"BRA", branch.Get["label"],  .From[(0.8, 0.5)];
		"Addr_{PC}", addr.Get["label"];
		"PC", pc.Get["label"], .From[(0.0, 0.5)];
	]
	\ .Show[(-51, -30), (32, 18)]
	.Save["eps", "pc_unit.eps"]
]
